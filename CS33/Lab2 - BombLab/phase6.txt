  400f44:       41 bc 00 00 00 00       mov    $0x0,%r12d			r12d = 0
  400f4a:       8b 45 00                mov    0x0(%rbp),%eax			eax = rbp
  400f4d:       83 e8 01                sub    $0x1,%eax			eax -= 1
  400f50:       83 f8 05                cmp    $0x5,%eax			if eax - 5 <= 0
  400f53:       76 05                   jbe    400f5a <phase_6+0x2b>		(have to be below 6)
  400f55:       e8 18 05 00 00          callq  401472 <explode_bomb>		
  400f5a:       41 83 c4 01             add    $0x1,%r12d			r12d += 1
  400f5e:       41 83 fc 06             cmp    $0x6,%r12d			if r12d == 6
  400f62:       74 22                   je     400f86 <phase_6+0x57>			then go to next part
  400f64:       44 89 e3                mov    %r12d,%ebx			ebx = r12d
  400f67:       48 63 c3                movslq %ebx,%rax			rax = ebx (sign extend from 32 bit to 64 bit reg)
  400f6a:       8b 55 00                mov    0x0(%rbp),%edx			edx = rbp
  400f6d:       3b 54 84 30             cmp    0x30(%rsp,%rax,4),%edx		compares current element to next element
  400f71:       75 05                   jne    400f78 <phase_6+0x49>		
  400f73:       e8 fa 04 00 00          callq  401472 <explode_bomb>		if equal then explode
  400f78:       83 c3 01                add    $0x1,%ebx			ebx += 1
  400f7b:       83 fb 05                cmp    $0x5,%ebx			ebx - 5
  400f7e:       7e e7                   jle    400f67 <phase_6+0x38>		if less than go to rax = ebx
  400f80:       48 83 c5 04             add    $0x4,%rbp			rbp += 4 (rbp will be next element)
  400f84:       eb c4                   jmp    400f4a <phase_6+0x1b>		go to eax = rbp

- All 6 numbers have to be 1 to 6 and all different


  400f86:       bb 00 00 00 00          mov    $0x0,%ebx			ebx = 0
  400f8b:       4c 8d 44 24 30          lea    0x30(%rsp),%r8			r8 = *(rsp + 0x30)
  400f90:       bd 01 00 00 00          mov    $0x1,%ebp			ebp = 1
  400f95:       be 70 37 60 00          mov    $0x603770,%esi			esi = 0x603770
  400f9a:       48 89 e7                mov    %rsp,%rdi			rdi = rsp
  400f9d:       eb 19                   jmp    400fb8 <phase_6+0x89>		******>
  400f9f:       48 8b 52 08             mov    0x8(%rdx),%rdx			<<<< rdx = *(rdx + 8) !!!!
  400fa3:       83 c0 01                add    $0x1,%eax			eax += 1
  400fa6:       39 c8                   cmp    %ecx,%eax			if eax - ecx != 0
  400fa8:       75 f5                   jne    400f9f <phase_6+0x70>			go to !!!!
  400faa:       48 89 14 5f             mov    %rdx,(%rdi,%rbx,2)		#### *(rdi + rbx*2) = rdx
  400fae:       48 83 c3 04             add    $0x4,%rbx			rbx += 0x4
  400fb2:       48 83 fb 18             cmp    $0x18,%rbx			if rbx - 0x18 == 0
  400fb6:       74 10                   je     400fc8 <phase_6+0x99>			go to &&&&
  400fb8:       41 8b 0c 18             mov    (%r8,%rbx,1),%ecx		>****** ecx = *(r8 + rbx)
  400fbc:       89 e8                   mov    %ebp,%eax			eax = ebp
  400fbe:       48 89 f2                mov    %rsi,%rdx			rdx = rsi
  400fc1:       83 f9 01                cmp    $0x1,%ecx			if ecx - 1 > 0
  400fc4:       7f d9                   jg     400f9f <phase_6+0x70>			go to >>>>
  400fc6:       eb e2                   jmp    400faa <phase_6+0x7b>		else jump to ####

- Creates a linked list

  400fc8:       48 8b 1c 24             mov    (%rsp),%rbx			&&&& rbx = *rsp
  400fcc:       48 8b 44 24 08          mov    0x8(%rsp),%rax			rax = *(rsp + 8)
  400fd1:       48 89 43 08             mov    %rax,0x8(%rbx)			*(rbx + 8) = rax
  400fd5:       48 8b 54 24 10          mov    0x10(%rsp),%rdx			rdx = *(rsp + 0x10)
  400fda:       48 89 50 08             mov    %rdx,0x8(%rax)			*(rax + 8) = rdx
  400fde:       48 8b 44 24 18          mov    0x18(%rsp),%rax			rax = *(rsp + 0x18)
  400fe3:       48 89 42 08             mov    %rax,0x8(%rdx)			*(rdx + 8) = rax
  400fe7:       48 8b 54 24 20          mov    0x20(%rsp),%rdx			rdx = *(rsp + 0x20)
  400fec:       48 89 50 08             mov    %rdx,0x8(%rax)			*(rax + 8) = rdx
  400ff0:       48 8b 44 24 28          mov    0x28(%rsp),%rax			rax = *(rsp + 0x28)
  400ff5:       48 89 42 08             mov    %rax,0x8(%rdx)			*(rdx + 0x8) = rax
  400ff9:       48 c7 40 08 00 00 00    movq   $0x0,0x8(%rax)			*(rax + 0x8) = 0
  401000:       00
  401001:       bd 00 00 00 00          mov    $0x0,%ebp			ebp = 0
  401006:       48 8b 43 08             mov    0x8(%rbx),%rax			rax = *(rbx + 0x8) -----
  40100a:       8b 13                   mov    (%rbx),%edx			edx = *(rbx)
  40100c:       3b 10                   cmp    (%rax),%edx			if edx - *rax <= 0
  40100e:       7e 05                   jle    401015 <phase_6+0xe6>			go to ++++
  401010:       e8 5d 04 00 00          callq  401472 <explode_bomb>		else explode
  401015:       48 8b 5b 08             mov    0x8(%rbx),%rbx			++++ rbx = *(rbx + 8)
  401019:       83 c5 01                add    $0x1,%ebp			ebp += 1
  40101c:       83 fd 05                cmp    $0x5,%ebp			if ebp - 5 != 0
  40101f:       75 e5                   jne    401006 <phase_6+0xd7>			go to -----
  401021:       48 83 c4 50             add    $0x50,%rsp			rsp += 0x50
  401025:       5b                      pop    %rbx
  401026:       5d                      pop    %rbp
  401027:       41 5c                   pop    %r12
  401029:       c3                      retq
